{
  "rules": {
    "users": {
      "$uid": {
        ".read": true,
        ".write": "$uid === auth.uid && newData.hasChildren(['email', 'emailVerified', 'photoUrl', 'userName'])",
        "email": {
          ".validate": "newData.val() === auth.token.email"
        },
        "emailVerified": {
          ".validate": "newData.val() === auth.token.email_verified"
        },
        "photoUrl": {
          ".validate": "newData.isString()"
        },
        "userName": {
          ".validate": "newData.val() === auth.token.name"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "userSpace": {
      "$uid": {
        "bands": {
          ".read": "auth.uid === $uid",
          "$band": {
            ".write": "root.child('users/'+$uid).exists() && root.child('bandSpace/'+$band+'/members/'+$uid).exists() || !root.child('bands/' + $band).exists()",
            ".validate": "newData.val() == true || newData.val() == null"
          }
        }
      }
    },
    "bands": {
      "$band": {
        ".write": "(!data.exists() || root.child('bands/'+$band+'/leader').val() == auth.uid) && newData.hasChildren(['description', 'name', 'leader']) || (!newData.exists() && root.child('bands/'+$band+'/leader').val() == auth.uid && !root.child('bandSpace/'+$band).exists())",
        ".read": "root.child('bandSpace/'+$band+'/members/'+auth.uid).exists()",
        "description": {
          ".validate": "newData.isString()"
        },
        "leader": {
          ".validate": "newData.val() === auth.uid"
        },
        "name": {
          ".validate": "newData.isString()"
        },
        "$other": {".validate": false}
      }
    },
    "bandSpace": {
      "$band": {
        ".read": "root.child('/bandSpace/'+$band+'/members/'+auth.uid).exists()",
        ".write": "root.child('/bands/'+$band+'/leader/').val() == auth.uid && !newData.exists()",
        "members": {
          "$memberID": {
            ".write": "root.child('bands/'+$band).exists() && root.child('bands/'+$band+'/leader').val() == auth.uid",
            ".validate": "newData.val() === true"
          }
        },
        "songs": {
          "$songID": {
            ".write": "root.child('bandSpace/'+$band+'/members/'+auth.uid).exists() && newData.hasChildren(['name', 'content', 'rating'])",
            "name": {".validate": "newData.isString()"},
            "content": {".validate": "newData.isString()"},
            "rating": {".validate": "newData.isString()"},
            "$other": {".validate": false},
          }
        },
        "sessions": {
          "$sessionID": {
            ".write": "root.child('/bandSpace/'+$band+'/members/'+auth.uid).exists() && (newData.hasChildren(['start', 'end', 'description', 'location', 'name', 'proposer']) || (!newData.exists() && !root.child('bandSpace/$band/sessionSpace/$sessionID').exists()))",
            "name": {".validate": "newData.isString()"},
            "start": {".validate": "newData.isString()"},
            "end": {".validate": "newData.isString()"},
            "description": {".validate": "newData.isString()"},
            "location": {".validate": "newData.isString()"},
            "proposer": {
              ".validate": "newData.val() === auth.uid",
            },
            "$other": {".validate": false},
          }
        },
        "sessionSpace": {
          "$sessionID": {
            //Deleting data
            ".write": "root.child('bandSpace/'+$band+'/sessions/'+$sessionID).exists() && root.child('bandSpace/'+$band+'/members/'+auth.uid).exists() && !newData.exists()",
            "assignedSongs": {
              "$songID":{
                ".write": "root.child('bandSpace/'+$band+'/sessions/'+$sessionID).exists() && root.child('bandSpace/'+$band+'/members/'+auth.uid).exists() && root.child('bandSpace/'+$band+'songs/'+$songID).exists()",
                ".validate": "newData.val() === true"
              }
            },
            "votes": {
              "$member": {
                ".write": "root.child('bandSpace/'+$band+'/sessions/'+$sessionID).exists()  && root.child('bandSpace/'+$band+'/members/'+auth.uid).exists() &&  $member == auth.uid && (newData.hasChildren(['value']) || !newData.exists())",
                "value": {
                  ".validate": "newData.val() === 1 || newData.val() === -1",
                },
                "$other": {".validate": "false"},
              }
            }
          }
        }
      },
    },
  }





















}
